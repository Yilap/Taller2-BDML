# Loading Libraries -------------------------------------------------------
rm(list = ls())
#install.packages("pacman")
require("pacman")
p_load("tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
# Se importan los 4 archivos a usar
test_hogares <- read_csv("Downloads/uniandes-bdml-20231-ps2/test_hogares.csv")
install.packages("httr")
install.packages("httr")
p_load("httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
library(httr)
require("pacman")
p_load("httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
APIKaggle <- GET("https://www.kaggle.com/competitions/uniandes-bdml-20231-ps2/data?select=train_personas.csv")
View(APIKaggle)
install.packages("kaggle")
p_load("kaggle","httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
install.packages("kaggle")
devtools::install_packages("mkearney/kaggler")
install_packages("mkearney/kaggler")
install.packages("mkearney/kaggler")
install.packages(c("devtools"))
devtools::install_github("ldurazo/kaggler"
devtools::install_github("ldurazo/kaggler")
devtools::install_github("ldurazo/kaggler")
library(readr)
library(kaggler)
devtools::install_github("ldurazo/kaggler")
kgl_auth(creds_file = 'kaggle.json')
response <- kgl_datasets_download_all(owner_dataset = "https://www.kaggle.com/competitions/uniandes-bdml-20231-ps2/data")
response <- kgl_datasets_download_all(owner_dataset = "kaggle competitions download -c uniandes-bdml-20231-ps2")
View(APIKaggle)
library(httr)
library(jsonlite)
install.packages(c("httr", "jsonlite","dplyr"))
library(httr)
library(jsonlite)
library("dplyr")
install.packages(c("httr", "jsonlite", "dplyr"))
res <- GET("https://www.kaggle.com/competitions/uniandes-bdml-20231-ps2/data")
rm(list = ls())
install.packages("kaggle")
library(kaggle)
p_load("jsonlite","kaggler","readr","httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
library(httr)
require("pacman")
p_load("jsonlite","kaggler","readr","httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
auth_url <- "https://www.kaggle.com/account/login"
response <- POST(
auth_url,
body = list(
username = "yilap88",
password = "61bd79a3ce7dffb7f76b341e39e90077",
rememberme = "true"
),
encode = "form"
)
token <- content(response)$xsrf_token
token <- content(response)$xsrf_token
auth_url <- "https://www.kaggle.com/account/login"
response <- POST(
auth_url,
body = list(
username = "yilap88",
password = "61bd79a3ce7dffb7f76b341e39e90077",
rememberme = "false"
),
encode = "form"
)
token <- content(response)$xsrf_token
kgl_credentials <- function(kgl_json_path="~/.kaggle/kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle/kaggle.json", flatten = TRUE)
return(user)
}
View(kgl_credentials)
rm(list = ls())
kgl_credentials <- function(kgl_json_path="~/.kaggle/kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle/kaggle.json", flatten = TRUE)
return(user)
}
View(kgl_credentials)
kgl_credentials <- function(kgl_json_path="~/.kaggle/kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle.json", flatten = TRUE)
return(user)
}
View(kgl_credentials)
kgl_credentials <- function(kgl_json_path="~/.kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle.json", flatten = TRUE)
return(user)
}
View(kgl_credentials)
kgl_dataset <- function(ref, file_name, type="dataset", kgl_json_path="~/.kaggle/kaggle.json"){
# ref: depends on 'type':
# - dataset: "sudalairajkumar/novel-corona-virus-2019-dataset"
# - competition: competition ID, e.g. 8587 for "competitive-data-science-predict-future-sales"
# file_name: specific dataset wanted, e.g. "covid_19_data.csv"
.kaggle_base_url <- "https://www.kaggle.com/api/v1"
user <- kgl_credentials(kgl_json_path)
if(type=="dataset"){
# dataset
url <- paste0(.kaggle_base_url, "/datasets/download/", ref, "/", file_name)
}else if(type=="competition"){
# competition
url <- paste0(.kaggle_base_url, "/competitions/data/download/", ref, "/", file_name)
}
# call
rcall <- httr::GET(url, httr::authenticate(user$username, user$key, type="basic"))
# content type
content_type <- rcall[[3]]$`content-type`
if( grepl("zip", content_type)){
# download and unzup
temp <- tempfile()
download.file(rcall$url,temp)
data <- read.csv(unz(temp, file_name))
unlink(temp)
}else{
# else read as text -- note: code this better
data <- content(rcall, type="text/csv", encoding = "ISO-8859-1")
}
return(data)
}
rm(list = ls())
kgl_credentials <- function(kgl_json_path="~/.kaggle/kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle/kaggle.json", flatten = TRUE)
return(user)
}
kgl_dataset <- function(ref, file_name, type="dataset", kgl_json_path="~/.kaggle/kaggle.json"){
# ref: depends on 'type':
# - dataset: "sudalairajkumar/novel-corona-virus-2019-dataset"
# - competition: competition ID, e.g. 8587 for "competitive-data-science-predict-future-sales"
# file_name: specific dataset wanted, e.g. "covid_19_data.csv"
.kaggle_base_url <- "https://www.kaggle.com/api/v1"
user <- kgl_credentials(kgl_json_path)
if(type=="dataset"){
# dataset
url <- paste0(.kaggle_base_url, "/datasets/download/", ref, "/", file_name)
}else if(type=="competition"){
# competition
url <- paste0(.kaggle_base_url, "/competitions/data/download/", ref, "/", file_name)
}
# call
rcall <- httr::GET(url, httr::authenticate(user$username, user$key, type="basic"))
# content type
content_type <- rcall[[3]]$`content-type`
if( grepl("zip", content_type)){
# download and unzup
temp <- tempfile()
download.file(rcall$url,temp)
data <- read.csv(unz(temp, file_name))
unlink(temp)
}else{
# else read as text -- note: code this better
data <- content(rcall, type="text/csv", encoding = "ISO-8859-1")
}
return(data)
}
kgl_credentials <- function(kgl_json_path="~/.kaggle/kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle/kaggle.json", flatten = TRUE)
return(user)
}
usuario <- kgl_credentials("C:\Users\Yilmer Palacios\Desktop\Repositorios GitHub\Taller-2---BD-ML\Scripts")
usuario <- kgl_credentials(C:\Users\Yilmer Palacios\Desktop\Repositorios GitHub\Taller-2---BD-ML\Scripts)
dir <- "C:\Users\Yilmer Palacios\Desktop\Repositorios GitHub\Taller-2---BD-ML\Scripts"
dir <- C:\Users\Yilmer Palacios\Desktop\Repositorios GitHub\Taller-2---BD-ML\Scripts
rm(list = ls())
rm(list = ls())
#install.packages("pacman")
#install.packages("httr")
require("pacman")
p_load("httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
#Compu Yilmer
test_hogares <- read_csv("C:\Users\Yilmer Palacios\Desktop\BaseDatosT2/test_hogares.csv")
#Compu Yilmer
test_hogares <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/test_hogares.csv")
train_hogares <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/train_hogares.csv")
test_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/test_personas.csv")
train_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/train_personas.csv")
train_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/sample_submission.csv")
train_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/sample_submission.csv")
View(test_hogares)
View(test_personas)
user <- kgl_credentials("")
user <- kgl_credentials("C:/Users/Yilmer Palacios/Desktop/Repositorios GitHub/Taller-2---BD-ML/Scripts")
user <- kgl_credentials(C:/Users/Yilmer Palacios/Desktop/Repositorios GitHub/Taller-2---BD-ML/Scripts)
user <- kgl_credentials()
kgl_credentials <- function(kgl_json_path="~/.kaggle/kaggle.json"){
# returns user credentials from kaggle json
user <- fromJSON("~/.kaggle/kaggle.json", flatten = TRUE)
return(user)
}
user <- kgl_credentials()
user <- kgl_credentials(C:\Users\Yilmer Palacios\Desktop\Repositorios GitHub\Taller-2---BD-ML\Scripts)
user <- kgl_credentials("C:\Users\Yilmer Palacios\Desktop\Repositorios GitHub\Taller-2---BD-ML\Scripts")
user <- kgl_credentials("C:/Users/Yilmer Palacios/Desktop/Repositorios GitHub/Taller-2---BD-ML/Scripts")
kgl_dataset <- function(ref, file_name, type="dataset", kgl_json_path="~/.kaggle/kaggle.json"){
# ref: depends on 'type':
# - dataset: "sudalairajkumar/novel-corona-virus-2019-dataset"
# - competition: competition ID, e.g. 8587 for "competitive-data-science-predict-future-sales"
# file_name: specific dataset wanted, e.g. "covid_19_data.csv"
.kaggle_base_url <- "https://www.kaggle.com/api/v1"
user <- kgl_credentials(kgl_json_path)
if(type=="dataset"){
# dataset
url <- paste0(.kaggle_base_url, "/datasets/download/", ref, "/", file_name)
}else if(type=="competition"){
# competition
url <- paste0(.kaggle_base_url, "/competitions/data/download/", ref, "/", file_name)
}
# call
rcall <- httr::GET(url, httr::authenticate(user$username, user$key, type="basic"))
# content type
content_type <- rcall[[3]]$`content-type`
if( grepl("zip", content_type)){
# download and unzup
temp <- tempfile()
download.file(rcall$url,temp)
data <- read.csv(unz(temp, file_name))
unlink(temp)
}else{
# else read as text -- note: code this better
data <- content(rcall, type="text/csv", encoding = "ISO-8859-1")
}
return(data)
}
kgl_dataset()
rm(list = ls())
#install.packages("pacman")
#install.packages("httr")
require("pacman")
p_load("httr","tidyverse","rvest","rio","skimr","caret","ggplot2","stargazer","readr")
# Importing Dataset -------------------------------------------------------
# Se importan los 4 archivos a usar
#test_hogares <- read_csv("Downloads/uniandes-bdml-20231-ps2/test_hogares.csv")
#train_hogares <- read_csv("Downloads/uniandes-bdml-20231-ps2/train_hogares.csv")
#test_personas <- read_csv("Downloads/uniandes-bdml-20231-ps2/test_personas.csv")
#train_personas <- read_csv("Downloads/uniandes-bdml-20231-ps2/train_personas.csv")
#Compu Yilmer
test_hogares <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/test_hogares.csv")
train_hogares <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/train_hogares.csv")
test_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/test_personas.csv")
train_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/train_personas.csv")
train_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/sample_submission.csv")
train_personas <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/train_personas.csv")
sample_sub <- read_csv("C:/Users/Yilmer Palacios/Desktop/BaseDatosT2/sample_submission.csv")
saveRDS(GEIH, file = "GEIH1.rds")
View(sample_sub)
View(test_hogares)
View(test_personas)
merged_train <- merge(train_hogares, train_personas, by = "id")
View(merged_train)
m_test <- merge(test_hogares, test_personas, by = "id")
rm(test_hogares, test_personas,train_hogares, train_personas)
